{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.13.619",
      "templateHash": "8063604013354104102"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure location for resources"
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of Application Insights resource"
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "Name of logical SQL Server"
      }
    },
    "sqlDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "SQL Database name"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for SQL server admin"
      }
    },
    "sqlAdminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for SQL server admin"
      }
    },
    "sqlAadAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of Azure AD user who will be admin"
      }
    },
    "sqlAadAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object id of Azure AD user who will be admin"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of App Service Plan"
      }
    },
    "appServicePlanTier": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Pricing tier of App Service Plan"
      }
    },
    "appServicePlanCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "# of instances in App Service Plan"
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of Web App that will host the app"
      }
    },
    "storageAccountName": {
      "type": "string",
      "maxLength": 24,
      "metadata": {
        "description": "Name of Storage account"
      }
    },
    "storageContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of blob container in Storage account"
      }
    },
    "aadAppClientId": {
      "type": "string",
      "metadata": {
        "description": "Client id / application id of app in Azure AD used for login"
      }
    }
  },
  "variables": {
    "storageBlobContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-08-01-preview",
      "name": "[parameters('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/administrators",
      "apiVersion": "2021-08-01-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), 'ActiveDirectory')]",
      "properties": {
        "administratorType": "ActiveDirectory",
        "login": "[parameters('sqlAadAdminUsername')]",
        "sid": "[parameters('sqlAadAdminObjectId')]",
        "tenantId": "[subscription().tenantId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-08-01-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-08-01-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), 'AllowAllWindowsAzureIps')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', parameters('storageAccountName'), 'default', parameters('storageContainerName'))]",
      "name": "[guid(resourceGroup().id, 'webAppFilesAccess')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2021-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('storageBlobContributorRoleId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', parameters('storageContainerName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanTier')]",
        "capacity": "[parameters('appServicePlanCapacity')]"
      },
      "kind": "app",
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "clientAffinityEnabled": false,
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('webAppName'), 'web')]",
      "properties": {
        "use32BitWorkerProcess": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
      "properties": {
        "Authentication__ClientId": "[parameters('aadAppClientId')]",
        "Storage__AccountName": "[parameters('storageAccountName')]",
        "Storage__FileContainerName": "[parameters('storageContainerName')]",
        "HTTPS_PORT": "443",
        "APPINSIGHTS_CONNECTIONSTRING": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ConnectionString]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('webAppName'), 'connectionstrings')]",
      "properties": {
        "DefaultConnection": {
          "type": "SQLAzure",
          "value": "[format('Server=tcp:{0}{1},1433;Initial Catalog={2};Authentication=Active Directory Managed Identity;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', parameters('sqlServerName'), environment().suffixes.sqlServerHostname, parameters('sqlDatabaseName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    }
  ]
}